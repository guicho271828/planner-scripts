#!/bin/bash
#-*- mode:sh -*-

################################################################
#### default options

bin=$SCRDIR/marvin
options=""
. $SCRDIR/util.sh

################################################################
#### option processing

while getopts ":o:" opt
do
    case ${opt} in
        o)  # specifies the search option
            options=${OPTARG:-$options} ;;
        \?) OPT_ERROR=1; break;;
        * ) echo "unsupported option $opt" ;;
    esac
done

vecho "$0 $@"

shift $(($OPTIND - 1))

if [[ ( $1 == "" ) || $OPT_ERROR ]]
then
    cat >&2 <<EOF
usage: ./test-problem
       [-o OPTIONS]        -- search options
       problemfile [domainfile=domain.pddl]
EOF
    exit 2
fi

################################################################
#### argument processing

problem=$(readlink -ef $DIR/$1)
probname=$(basename $problem .pddl)
probdir=$(dirname $problem)

if [[ $2 != "" ]]
then
    domain=$(cd $DIR; readlink -ef $2)
else
    domain=$probdir/domain.pddl
fi
if [[ ! -e $domain ]]
then
    echo "no domain file $domain!" >&2
    exit 1
fi

################################################################
#### main

plan(){
    vecho $(whoami)@$(hostname)
    $bin $options domain.pddl problem.pddl
}

finalize (){
    $SCRDIR/killall.sh $pid -15
    vcp $STAT $probdir/$probname.stat
    vcp log $probdir/$probname.log
    # ++++++
    # Goal predicates not in initial fact layer
    # Number of actions found = 90
    # Search beginning
    #  ....b (9) ......b (8) ...b (7) .b (6) ..b (5) ..b (4) .b (3) .b (2) .b (1) .All goals achieved!
    # ;;;; Solution Found
    # ; Time 0.00
    # ; ParsingTime 0.00
    # ; NrActions 
    # ; MakeSpan 8
    # ; MetricValue
    # 0: (lift hoist0 crate1 pallet0 depot0) [1]
    # 1: (load hoist0 crate1 truck1 depot0) [1]
    # 2: (drive truck1 depot0 distributor0) [1]
    # 2: (lift hoist1 crate0 pallet1 distributor0) [1]
    # 3: (load hoist1 crate0 truck1 distributor0) [1]
    # 4: (unload hoist1 crate1 truck1 distributor0) [1]
    # 5: (drive truck1 distributor0 distributor1) [1]
    # 5: (drop hoist1 crate1 pallet1 distributor0) [1]
    # 6: (unload hoist2 crate0 truck1 distributor1) [1]
    # 7: (drop hoist2 crate0 pallet2 distributor1) [1]
    grep "^[0-9]\+: ([^)]*) \[[0-9]*\]" log | cut -d " " -f 2- | sed -e "s/\[[0-9]\+\]//g" \
        > $probdir/$probname.plan
}

################################################################

trap "finalize" SIGHUP SIGQUIT SIGABRT SIGSEGV SIGTERM SIGXCPU SIGXFSZ EXIT

vcp $problem problem.pddl
vcp $domain domain.pddl
plan &> log &
pid=$!

if $VERBOSE
then
    tail -f --pid $pid log
else
    wait $pid
fi

