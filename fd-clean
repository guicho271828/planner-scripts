#!/bin/bash
#-*- mode:sh -*-

################################################################
#### default options

################################################################
#### main

# echo $FD_DIR

find-fd-py (){
    fdscript=$(find $FD_DIR -name "fast-downward.py")
    [[ -z $fdscript ]]
}

find-fd-upward (){
    echo "finding FD installation from $1 ..."
    if [[ -d $1/downward ]]
    then
        FD_DIR=$(readlink -ef $1/downward)
        find-fd-py
    else
        if [[ $1 == / ]]
        then
            exit 1
        else
            find-fd-upward $(readlink -ef $1/..)
        fi
    fi
}

if find-fd-py
then
    find-fd-upward $(dirname $(readlink -ef $0))
fi

plan(){
    echo $(whoami)@$(hostname)
    OPTIONS=${OPTIONS:-"--alias seq-sat-lama-2011"}
    declare -a array=($OPTIONS)
    if [[ ${array[0]} == --alias ]]
    then
        echodo $fdscript \
            $OPTIONS \
            --run-all \
            --plan-file $probdir/$probname.plan \
            $(if $VERBOSE ; then echo "--log-level info" ; else echo "--log-level warning" ; fi) \
            domain.pddl problem.pddl
    else
        echodo $fdscript \
            --run-all \
            --search-memory-limit 2G \
            --plan-file $probdir/$probname.plan \
            $(if $VERBOSE ; then echo "--log-level info" ; else echo "--log-level warning" ; fi) \
            domain.pddl problem.pddl \
            $OPTIONS
    fi
}

finalize (){
    :
}

negatively-proven (){
    grep "Completely explored state space" log &> /dev/null
}

report-results (){
    awk "/Plan cost:/{print $2}" log | sort | head -n 1
}

plan-found (){
    ls -e $probdir/$probname.plan*
}

################################################################

. $SCRDIR/common.sh
